import tkinter as tk
from tkinter import *

import time

start_time = time.time()

response = None

def datas(source):
    source = str(source)
    try:
        file = open(source, "r", encoding= "utf-8")
    
    except Exception as e:
        file =  open("source/output.txt", "r", encoding= "utf-8")
        if source != "":
            print(f"Hiba: {e}")
            del file

        print("\nForrás: Alapértelmezet forrás")
        
        
    try:
    
        text = file.read()

        records = 0
            
        for i in text.split('\n'):
            if i.startswith('001'):
                records += 1 

        print("Rekord azonosítók:", records)

        record_heads = 0

        for i in text.split('\n'):
            if i.startswith('000'):
                record_heads += 1
            
        print("Rekord fejek:", record_heads)

        location = 0

        for i in text.split("\n"):
            if i.startswith('850'):
                location += 1

            
        print("Lelőhely:",location)

        storage_label = 0

        for i in text.split("\n"):
            if i.startswith('852'):
                storage_label += 1

        print("Raktári jelzet:", storage_label)

    except Exception as e:
        if FileExistsError == False:
            print(f"Hiba: {e}")



def label():
    with open('source/output.txt', "r", encoding= "utf-8") as file:
        lines = file.readlines()

        labels = []

        for i in lines:
            if i.count("001") > 0 and i.count(" 001") == 0 and i.count(".001") == 0:
                i = int(i.replace("001 ", ""))
                labels.append(i)

        labels.sort()

        print("\nAzonosítók:")

        for i in labels:
            print(f"{i},")

    
def date():
    with open('source/output.txt', "r", encoding= "utf-8") as file:

        text = file.read()

        date_sorted = []

        for i in text.split('\n'):
            if i.startswith('005'):
                i = i.replace('005', '').replace('.0', '')
                date_sorted.append(i)
                date_sorted.sort()

                year = i[1:5]
                month = i[5:7]
                day = i[7:9]
                hour = i[9:11]
                minute = i[11:13]
                second = i[13:15]

                print(f"{year}. {month}. {day}. {hour}:{minute}:{second}")
            
        print("\nIdőrendben:\n")
        for i in date_sorted:
            
            year = i[1:5]
            month = i[5:7]
            day = i[7:9]
            hour = i[9:11]
            minute = i[11:13]
            second = i[13:15]

      
            print(f"{year}. {month}. {day}. {hour}:{minute}:{second}")



def source_in():
    source = input("\nForrás:\n")
    datas(source)


def search(searched, what):
    global response
    with open("source/datalist.txt", "r", encoding= "utf-8") as text:
    
        try:
            previous = None
            
            for i in text:
                if what == 'a' and i.startswith('Azonosító'):
                    if searched in i:
                        response = (f"{i.strip()}\n{next(text).strip()} \n")
                        print(i.strip())
                        print(next(text).strip(), "\n")
                    else:
                        response = "A keresett azonosító nem található"
                        print(response)
                        break
                
                elif what == 'j' and i.startswith('Jelzet'):
                    if searched in i:
                        response = (f"{previous.strip()}\ni.strip()\n")
                        print(previous.strip())
                        print(i.strip(), "\n")
                    else:
                        response = "A keresett jelzet nem található"
                        print(response)
                        break
                    
                previous = i
                        
                    
            
        except Exception as e:
            print(e)
    


def app_menu():
    global response
    
    menu = tk.Tk()
    menu.geometry("1280x720+100+25")

    label = tk.Label(menu, text = '0')
    label.pack()
    
    str_var = StringVar()

    label1 = tk.Label(menu, text = 'Azonosító:')
    label1.config(font = ('Arial', 25))
    label1.place(x = 30, y = 20)

    label2 = tk.Label(menu, text = 'Jelzet:')
    label2.config(font = ('Arial', 25))
    label2.place(x = 30, y = 70)
    
    response_label = tk.Label(menu, textvariable = str_var)
    response_label.config(font = ('Arial', 25))
    response_label.place(x = 230, y = 270)

    entry1 = tk.Entry(menu)
    entry1.config(font = ('Arial', 25))
    entry1.place(x = 200, y = 20)

    entry2 = tk.Entry(menu)
    entry2.config(font = ('Arial', 25))
    entry2.place(x = 200, y = 70)
    

    def data_search():
        n1 = entry1.get()
        n2 = entry2.get()
        
        if n1 != '':
            search(n1, 'a')
        else:
            search(n2, 'j')
            
        str_var.set(response)        
        
    button = tk.Button(menu, text = 'Keresés', command = data_search)
    button.config(font = ('Arial', 15))
    button.place(x = 330, y = 120)
    
    

    menu.mainloop()



app_menu()


margin = 29*"-"
print(f"\n{margin}\n{(time.time() - start_time)} seconds\n{margin}\n")
